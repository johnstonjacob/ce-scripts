version: 2.1

references:
    base_image: &base_image johnstonjacob/go-node-sls.Dockerfile:latest

    working_directory: &working_directory ~/proj

    environment: &environment
        environment:
            GO111MODULE: "on"
            BASH_ENV: "~/root/.bashrc"

    default_settings: &default_settings
        docker:
            - image: *base_image
        working_directory: *working_directory
        <<: *environment

jobs:
    build-images:
        machine:
            image: ubuntu-1604:201903-01
        steps:
            - checkout
            - run:
                command: docker build -t cse-scripts-go-node-sls -f go-node-sls.Dockerfile .
                working_directory: ~/proj/dockerfiles
            - run:
                command: docker tag johnstonjacob/go-node-sls.Dockerfile:latest
                working_directory: ~/proj/dockerfiles
            - run:
                command: docker login -u $DOCKERHUB_USER -p $DOCKERHUB_PASS
                working_directory: ~/proj/dockerfiles
            - run:
                command: docker push johnstonjacob/go-node-sls.Dockerfile:latest
                working_directory: ~/proj/dockerfiles

    build:
        <<: *default_settings
        steps:
            - checkout
            - run:
                name: set env
                command: |
                    cd && touch $BASH_ENV

                    if [ "${CIRCLE_BRANCH}" == "master" ]; then
                        echo 'export SLS_STAGE=prod' | >> $BASH_ENV
                    else
                        echo 'export SLS_STAGE=staging' | >> $BASH_ENV
                    fi
            - run:
                  name: Run commit check and BTD
                  command: |
                      source $BASH_ENV
                      ~/proj/.circleci/scripts/commit_check.sh

workflows:
    version: 2.1
    btd:
        jobs:
            - build:
                context: PAT_WK
    nightly:
        jobs:
            - build-images:
                context: PAT_WK
        triggers:
            - schedule:
                cron: "29 17 * * *"
                filters:
                    branches:
                        only:
                            - master


