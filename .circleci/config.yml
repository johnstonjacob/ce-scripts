version: 2

references:
    base_image: &base_image johnstonjacob/go-node-sls:latest
    machine_image: &machine_image ubuntu-1604:201903-01

    working_directory: &working_directory ~/proj

    environment: &environment
        environment:
            GO111MODULE: "on"
            BASH_ENV: /root/.bashrc

    docker_settings: &docker_settings
        docker:
            - image: *base_image
        working_directory: *working_directory
        <<: *environment

    machine_settings: &machine_settings
        machine:
            image: *machine_image
        working_directory: *working_directory

jobs:
    build-images:
        <<: *machine_settings
        steps:
            - checkout
            - run:
                command: docker build -t go-node-sls -f go-node-sls.Dockerfile .
                working_directory: ~/proj/dockerfiles
            - run:
                command: docker tag go-node-sls johnstonjacob/go-node-sls:latest
            - run:
                command: docker login -u $DOCKERHUB_USER -p $DOCKERHUB_PASS
            - run:
                command: docker push johnstonjacob/go-node-sls:latest

    build-workflow-cost-estimator:
        <<: *docker_settings
        steps:
            - checkout
            - run:
                name: set env
                command: |
                    cd && touch $BASH_ENV

                    if [ "${CIRCLE_BRANCH}" == "master" ]; then
                        echo 'export SLS_STAGE=prod' | >> $BASH_ENV
                    else
                        echo 'export SLS_STAGE=staging' | >> $BASH_ENV
                    fi
            - run: npm install --save-dev
            - run: go get -v -d .
            - run: cd ~/proj/src/workflow-cost-estimator && go test -v
            - run: make deploy

workflows:
    version: 2
    btd:
        jobs:
            - build-workflow-cost-estimator:
                context: PAT_WK
    nightly:
        jobs:
            - build-images:
                context: PAT_WK
        triggers:
            - schedule:
                cron: "0 0 * * *"
                filters:
                    branches:
                        only:
                            - master


